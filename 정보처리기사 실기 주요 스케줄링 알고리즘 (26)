<div align =center> <span style="color:red"><h2>!주의! : 이 게시물은 정보성 게시물이 아닌 개인 공부 복기용 게시물 입니다. 정확하지 않을 수 있습니다. </h2><span></div> 
<br><br>
<div align = center><h3>🤗훈수는 언제나 환영입니다🤗</h3></div>
<br>

  <div align=center><h2>주요 스케줄링 알고리즘</h2></div>
<br>
  
  
 
  
  
  
  
  

  ### FCFS (First Come First Service, 선입선출)
  >
  - 준비상태 큐에 도착한 순서에 따라 차례로 CPU를 할당하는 기법
     ---
- 가장 간단한 알고리즘
  
  ### SJF (Shortest Job First, 단기 작업 우선) 
  >
  - 준비상태 큐에서 <span style="color:red">실행시간이 가장 짧은 프로세스에게 먼저</span> CPU를 할당하는 기법

---  
  
  ### HRN (Highest Response-ratio Next)
>
  - 대기 시간과 서비스(실행) 시간을 이용하는 기법이다.
     ----
- 실행 시간이 긴 프로세스에 불리한 SJF기법을 보완하기 위한 것이다.
     ---
 - <span style="color:red">우선순위를 계산하여 그 숫자가 가장 높은 것부터 낮은 순으로 우선순위가 부여된다</span>

  
 ### 우선순위 계산식
>- $$ 
\dfrac{대기시간 + 서비스 시간}{서비스 시간}
   
  ---
  
  ### RR (Round Robin)
  >
  - <span style="color:red">시간 할당량 동안만 실행한 후 다음 프로세스에게 CPU를 넘겨주는 기법</span>
     ---
 - 시분할 시스템을 위해 고안된 방식으로, <span style="color:red">할당되는 시간의 크기가 작으면 작은 프로세스들에게 유리</span>하다
    ---
 - 할당되는 시간이 클 경우 FCFS기법과 같아지고, 할당되는 시간이 작을 경우 문맥 교환 밒 오버헤드가 자주 발생되어 요청된 작업을 신속히 처리할 수 없다.

  ### SRT (Shortest Remaining Time)
  >
  - 현재 실행중인 프로세스의 <span style="color:red">남은 시간과 새로 도착한 프로세스의 실행 시간을 비교</span>하여 <span style="color:red">가장 짧은 실행 시간을 요구하는 프로세스에게 할당</span>하는 기법
     ---
  - <span style="color:red">시분할 시스템에 유용</span>하며, 준비상태 큐에 있는 각 프로세스의 실행 시간을 추적하고 보유하고 있어야 하므로, 오버헤드가 증가한다
  
  
  
 
 
  
 
  
 
  
