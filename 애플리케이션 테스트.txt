화이트박스 테스트 - 원시코드의 논리적인 모든 경로를 테스트하여 테스트 케이스를 설계하는 방법이다.

화이트박스 테스트의 종류
기초 경로 검사 - 테스트 케이스 설계자가 절차적 설계의 논리적 복잡성을 측정할 수 있게 해주는 테스트 기법, 대표적인 화이트박스 테스트 기법
(Base Path Testing) 

제어 구조 검사 
(Control Structure Testing)
조건 검사 (Condition Testing) : 프로그램 모듈 내에 있는 논리적 조건을 테스트 하는 테스트 케이스 설계 기법

루프 검사 (Loop Testing)  :프로그램의 반복(Loop) 구조에 초점을 맞춰 실시하는 테스트 케이스 설계 기법

데이터 흐름 검사(Data Flow Testing) : 프로그램에서 변수의 정의와ㅏ 변수 사용의 위치에 초점을 맞춰 실시하는 테스트 케이스 설계 기법

화이트 테스트의 검증 기준
문장 검증 기준(Statement Coverage) - 소스 코드의 모든 구문이  한 번 이상 수행되도록 테스트케이스를 설계함

분기 검증 기준(Brangh Coverage) - 소스 코드의 모든 조건문에 대해 조건식의 결과가 True인 경우와 False인 경우가 한 번 이상 술행되도록 테스트 케이스를 설계함, 결정 검증 기준(Decision Coverage)라고도 함

조건 검증 기준(Condition Coverage) - 소스 코드의 조건문에 포함된 개별 조건식의 결과가 True인 경우와 False인 경우가 한 번 이상 수행되도록 테스트케이스를 설계함

분기/조건 기준(Branch/Condition Coverage) - 분기 검증 기준과 조건 검증 기준을 모두 만족하는 설계로, 조건문이 True인 경우와 False인 경우에 따라 조건 검증 기준의 입력 데이터를 구분하는 테스트 케이스를 설계함



블랙박스 테스트 - 각 기능이 완전히 작동되는 것을 입증하는 테스트

블랙박스 테스트의 종류
동치 분할 검사(Equivalence Partitionin Testing) - 프로그램의 입력 조건에 타당한 입력 자료와 타당하지 않은 입력 자료의 개수를 균등하게 하여 테스트 케이스를 정하고, 해당 입력자료에 맞는 결과가 출력되는지 확인
                                                하는 기법, 동등 균할 기법이라고도 함

결계값 분석(Boundary Value Analysis) - 입력 조건의 중간값보다 오류가 발생될 확률이 높다는 점을 이용하여 입력 조건의 경계값을 테스트 케이스로 선정하여 검사하는 기법

원인-효과 그래프 검사(Caise-Effect Graphing Testing) - 입력 데이터 간의 관계와 추력에 영향을 미치는 상황을 체계적으로 분석한 다음 효용성이 높은 테스트 케이스를 선정하여 섬사하는 기법

오류 예측 검사 (Error Guessing) - 과거의 경험이나 확인자의 감감ㄱ으로 테스트하는 기법

비교 검사 (Comparison Testing) - 여러 버넞의 프로그램에 동일한 테스트 자료를 제공하여 동일한 결과가 출력되는지 테스트하는 기법
